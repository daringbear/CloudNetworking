%% Network Visualizer
%  Visualize Substrate Network and Network Slices
% * |b_undirect|: if this argument is set to |true|, draw the network as undirected graph.
function plot(this, b_undirect)
if nargin < 2
	b_undirect = false;
end
num_figure = this.NumberSlices+1;
if num_figure >= 16
	num_figure = 16;
end
plot_col = ceil(sqrt(num_figure));
plot_row = ceil(num_figure/plot_col);
h1 = subplot(plot_row,plot_col, 1);
plot_args = {...
	'NodeLabel', 1:this.NumberNodes, ...
	'MarkerSize', 5,...
	'LineWidth', 1.5, ...
	'NodeColor', PhysicalNetwork.NodeColor(1,:), ...
	'EdgeColor', PhysicalNetwork.EdgeColor(1,:)...
	};
if b_undirect
	g = graph(this.graph.Adjacent+this.Topology.Adjacent');
else
	g = digraph(this.Links{:,{'EndNodes'}}, this.Nodes);
	plot_args = [plot_args, ...
		'EdgeLabel', 1:this.NumberLinks, ...
		];
end
if contains('Location', this.Nodes.Properties.VariableNames)
	plot_args = [plot_args, ...
		'XData', this.Nodes.Location(:,1), ...
		'YData', this.Nodes.Location(:,2), ...
		];
end
g.plot(plot_args{:})
title('Substrate Network');
for i = 2:num_figure
	h = subplot(plot_row,plot_col, i);
	node_label = cell(this.slices{i-1}.NumberVirtualNodes,1);
	for j = 1:this.slices{i-1}.NumberVirtualNodes
		node_label{j} = sprintf('%d(%d)', ...
			j, this.slices{i-1}.VirtualNodes.PhysicalNode(j));
	end
	plot_args = {...
		'NodeLabel', node_label, ...
		'MarkerSize', 5,...
		'LineWidth', 1.5, ...
		'NodeColor', PhysicalNetwork.NodeColor(mod(i-1,length(PhysicalNetwork.NodeColor))+1,:), ...
		'EdgeColor', PhysicalNetwork.EdgeColor(mod(i-1,length(PhysicalNetwork.EdgeColor))+1,:)...
		};
	if contains('Location', this.Nodes.Properties.VariableNames)
		plot_args = [plot_args, ...
			'XData', this.Nodes.Location(this.slices{i-1}.VirtualNodes.PhysicalNode,1), ...
			'YData', this.Nodes.Location(this.slices{i-1}.VirtualNodes.PhysicalNode,2), ...
			]; %#ok<AGROW>
	end
	if b_undirect
		g = graph(this.slices{i-1}.Topology.Adjacent+...
			this.slices{i-1}.Topology.Adjacent');
	else
		g = digraph(this.slices{i-1}.Links{:,{'EndNodes'}}, this.slices{i-1}.Nodes);
		edge_label = cell(this.slices{i-1}.NumberVirtualLinks,1);
		for j = 1:this.slices{i-1}.NumberLinks
			edge_label{j} = sprintf('%d(%d)', j, this.slices{i-1}.Links.PhysicalLink(j));
		end
		plot_args = [plot_args, ...
			'EdgeLabel', edge_label, ...
			]; %#ok<AGROW>
	end
	g.plot(plot_args{:});
	title(sprintf('Network slice (%d)',i-1));
	h.XLim = h1.XLim;
	h.YLim = h1.YLim;
end
